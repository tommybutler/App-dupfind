name    = App-dupfind
author  = Tommy Butler <devnull@internetalias.net>
license = Perl_5
copyright_holder = Tommy Butler
is_trial = 1

[Meta::Contributors]
contributor = Tom Metro <tmetro@tommetro.com>
contributor = Tim King <timk@jtimothyking.com>
contrubutor = BrowserUK <u.can.find.BrowserUK@perlmonks.org>

[@Filter]
bundle = @Basic
remove = ExtraTests

[RunExtraTests]

[ModuleBuild]

[AutoVersion]
major = 0

[PkgVersion]
[PodVersion]
[MetaProvides::Package]
[MinimumPerl]
[MetaConfig]
[MetaJSON]
[MetaResources]
homepage          = https://github.com/tommybutler/app-dupfind/wiki
bugtracker.web    = https://rt.cpan.org/Dist/Display.html?Name=App%3A%3Adupfind
bugtracker.mailto = bug-App-dupfind@rt.cpan.org
repository.url    = git://github.com/tommybutler/app-dupfind.git
repository.web    = https://github.com/tommybutler/app-dupfind
repository.type   = git

[ReportVersions::Tiny]

;[Test::LocalBrew]
;brews = perl-5.18.1

[@TestingMania]
disable = Test::Portability ; won't accept options; wrote my own version instead
disable = Test::EOL ; some of the tests fail their own EOL test; strange
disable = Test::Pod::LinkCheck ; seems buggy, causes too many false failures
disable = Test::MinimumVersion ; I do this myself, via the Perlbrew testing

[Test::PodSpelling]
stopwords = benchmarking
stopwords = BrowserUk
stopwords = codebase
stopwords = conf
stopwords = cpan
stopwords = CPAN
stopwords = datastructure
stopwords = deduplicated
stopwords = deduplication
stopwords = deduplicate
stopwords = dupfind
stopwords = filename
stopwords = filenames
stopwords = Github
stopwords = hardlinks
stopwords = html
stopwords = iface
stopwords = inodes
stopwords = listref
stopwords = listrefs
stopwords = metadata
stopwords = multithreaded
stopwords = namespace
stopwords = OO
stopwords = parsable
stopwords = perlmonks
stopwords = POSIX
stopwords = ramcache
stopwords = STDERR
stopwords = subclasses
stopwords = subdirectories
stopwords = subdirectory
stopwords = unicode
stopwords = UTF
stopwords = yada

[CheckChangesHasContent]
[TestRelease]
[ConfirmRelease]

[Signature]
sign = always

; The plugin below is ::Extra cool, but a little buggy; I only use it sometimes
; and it can't be used at the same time as the more mainstream Test::Kwalitee
; plugin from chromatic (above)
;
;[Test::Kwalitee::Extra]
;arg = !valid_signature

[AutoPrereqs]
; reminder: double check that all prereqs have been detected!

; regarding prereqs section syntax (taken from dzil source code) -
; (Build|Test|Runtime|Configure|Develop)?(Requires|Recommends|Suggests|Conflicts)

[Prereqs / TestRequires]
Benchmark = 0
Digest::xxHash = 0
ExtUtils::MakeMaker = 0
File::Util = 0
Getopt::Long = 0
Module::Build = 0
Moo = 0
Moo::Role = 0
Test = 0
Test::More = 0
Test::NoWarnings = 0
Thread::Queue = 0
threads = 0
threads::shared = 0
Time::HiRes = 0

[Prereqs / Recommends]

[Prereqs / DevelopRequires]
Dist::Zilla = 0
Perl::Critic = 0
Perl::Critic::Lax = 0
Devel::Cover = 0
Test::Fatal = 0

;[Prereqs / DevelopRecommends]
;Devel::NYTProf = 0
